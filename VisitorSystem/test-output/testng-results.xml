<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-06T16:25:59 NPT" name="Default suite" finished-at="2025-05-06T16:26:15 NPT" duration-ms="16342">
    <groups>
    </groups>
    <test started-at="2025-05-06T16:25:59 NPT" name="Default test" finished-at="2025-05-06T16:26:15 NPT" duration-ms="16342">
      <class name="Authentication.session">
        <test-method signature="GetSessionInformation()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:25:59 NPT" name="GetSessionInformation" finished-at="2025-05-06T16:26:04 NPT" duration-ms="4847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionInformation -->
        <test-method signature="GetSessionwithInvalidAuth()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:04 NPT" name="GetSessionwithInvalidAuth" finished-at="2025-05-06T16:26:05 NPT" duration-ms="1599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidAuth -->
        <test-method signature="GetSessionwithInvalidDevice()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:05 NPT" name="GetSessionwithInvalidDevice" finished-at="2025-05-06T16:26:06 NPT" duration-ms="839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidDevice -->
        <test-method signature="GetSessionwithInvalidLocation()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:06 NPT" name="GetSessionwithInvalidLocation" finished-at="2025-05-06T16:26:07 NPT" duration-ms="944" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidLocation -->
        <test-method signature="GetSessionwithInvalidRequestTimestamp()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:07 NPT" name="GetSessionwithInvalidRequestTimestamp" finished-at="2025-05-06T16:26:09 NPT" duration-ms="1625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidRequestTimestamp -->
        <test-method signature="GetSessionwithInvalidSignature()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:09 NPT" name="GetSessionwithInvalidSignature" finished-at="2025-05-06T16:26:09 NPT" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidSignature -->
        <test-method signature="GetSessionwithInvalidSystemID()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:09 NPT" name="GetSessionwithInvalidSystemID" finished-at="2025-05-06T16:26:10 NPT" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidSystemID -->
        <test-method signature="GetSessionwithInvalidUser()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:10 NPT" name="GetSessionwithInvalidUser" finished-at="2025-05-06T16:26:10 NPT" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithInvalidUser -->
        <test-method signature="GetSessionwithinvalidSystemCredentials()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:10 NPT" name="GetSessionwithinvalidSystemCredentials" finished-at="2025-05-06T16:26:11 NPT" duration-ms="507" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <422> but was <401>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <422> but was <401>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at Authentication.session.GetSessionwithinvalidSystemCredentials(session.java:596)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithinvalidSystemCredentials -->
        <test-method signature="GetSessionwithoutAuth()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:11 NPT" name="GetSessionwithoutAuth" finished-at="2025-05-06T16:26:11 NPT" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutAuth -->
        <test-method signature="GetSessionwithoutDevice()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:11 NPT" name="GetSessionwithoutDevice" finished-at="2025-05-06T16:26:12 NPT" duration-ms="1224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutDevice -->
        <test-method signature="GetSessionwithoutLocation()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:12 NPT" name="GetSessionwithoutLocation" finished-at="2025-05-06T16:26:13 NPT" duration-ms="550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutLocation -->
        <test-method signature="GetSessionwithoutRequestTimestamp()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:13 NPT" name="GetSessionwithoutRequestTimestamp" finished-at="2025-05-06T16:26:13 NPT" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutRequestTimestamp -->
        <test-method signature="GetSessionwithoutSignature()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:13 NPT" name="GetSessionwithoutSignature" finished-at="2025-05-06T16:26:14 NPT" duration-ms="1017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutSignature -->
        <test-method signature="GetSessionwithoutSystemID()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:14 NPT" name="GetSessionwithoutSystemID" finished-at="2025-05-06T16:26:15 NPT" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutSystemID -->
        <test-method signature="GetSessionwithoutUserAgent()[pri:0, instance:Authentication.session@25fb8912]" started-at="2025-05-06T16:26:15 NPT" name="GetSessionwithoutUserAgent" finished-at="2025-05-06T16:26:15 NPT" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetSessionwithoutUserAgent -->
      </class> <!-- Authentication.session -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
